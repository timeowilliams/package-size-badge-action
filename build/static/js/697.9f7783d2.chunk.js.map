{"version":3,"file":"static/js/697.9f7783d2.chunk.js","mappings":"0KAIA,MAoEA,EApEcA,IAAwB,IAAvB,cAAEC,GAAeD,EAC9B,MAAOE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IA8BnC,OACEK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAC9BE,EAAAA,EAAAA,MAAA,QAAMD,UAAU,aAAaE,SA/BfC,UAClBC,EAAEC,iBACFT,EAAS,IACT,IACE,MAAMU,QAAiBC,MAAM,GAADC,OAAIC,EAAAA,EAAOC,WAAU,sBAAsB,CACrEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEzB,WAAUG,eAGnC,IAAKa,EAASU,GACZ,MAAM,IAAIC,MAAM,uBAADT,OAAwBF,EAASY,SAGlD,MAAMC,QAAab,EAASc,OAC5BC,QAAQC,KAAK,mBAAoBH,GACjCI,aAAaC,QAAQ,QAASL,EAAKM,OACnCJ,QAAQK,IAAI,oBAAqBrC,GACjCA,GAAc,EAChB,CAAE,MAAOM,GACP0B,QAAQ1B,MAAM,oBAAqBA,GACnCC,EAAS,8DACTP,GAAc,EAChB,GAMuDU,SAAA,EACjDF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SAAC,WAC3BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SAAO8B,QAAQ,WAAU5B,SAAC,cAC1BF,EAAAA,EAAAA,KAAA,SACE+B,GAAG,WACHC,KAAK,OACLC,MAAOxC,EACPyC,SAAW3B,GAAMb,EAAYa,EAAE4B,OAAOF,OACtCG,UAAQ,QAGZhC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SAAO8B,QAAQ,WAAU5B,SAAC,cAC1BF,EAAAA,EAAAA,KAAA,SACE+B,GAAG,WACHC,KAAK,WACLC,MAAOrC,EACPsC,SAAW3B,GAAMV,EAAYU,EAAE4B,OAAOF,OACtCG,UAAQ,OAGXtC,IAASE,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gBAAeD,SAAEJ,KACxCE,EAAAA,EAAAA,KAAA,UAAQgC,KAAK,SAAS7B,UAAU,eAAcD,SAAC,gBAKlD,C","sources":["components/Login.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport config from \"../config\";\nimport \"./Login.css\";\n\nconst Login = ({ setIsLoggedIn }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      const response = await fetch(`${config.SERVER_URL}/api/v1/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.info(\"Login successful\", data);\n      localStorage.setItem(\"token\", data.token);\n      console.log(\"setIsLoggedIn is \", setIsLoggedIn);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      setError(\"Login failed. Please check your credentials and try again.\");\n      setIsLoggedIn(false);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"login-container\">\n        <form className=\"login-form\" onSubmit={handleLogin}>\n          <h1 className=\"page-title\">Login</h1>\n          <div className=\"input-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          {error && <p className=\"error-message\">{error}</p>}\n          <button type=\"submit\" className=\"login-button\">\n            Login\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["_ref","setIsLoggedIn","username","setUsername","useState","password","setPassword","error","setError","_jsx","_Fragment","children","className","_jsxs","onSubmit","async","e","preventDefault","response","fetch","concat","config","SERVER_URL","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","info","localStorage","setItem","token","log","htmlFor","id","type","value","onChange","target","required"],"sourceRoot":""}