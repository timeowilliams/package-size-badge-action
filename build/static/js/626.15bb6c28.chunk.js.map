{"version":3,"file":"static/js/626.15bb6c28.chunk.js","mappings":"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","sources":["components/AddListing.jsx","components/BuyerBrokerTable.jsx","components/ListingsManager.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport config from \"../config.js\";\nimport { useAgents } from \"../contexts/AgentContext.js\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport {\n  validateMlsId,\n  validateAddress,\n  validateCity,\n  validateCompensation,\n  validateEmail,\n  validateListingBroker,\n  validatePhone,\n  validateZip,\n} from \"../lib/utils.js\";\n\nconst AddListing = ({ onListingAdded }) => {\n  const { agents, loading, error: agentsError } = useAgents();\n  const [errors, setErrors] = useState({});\n\n  const [listing, setListing] = useState({\n    mlsId: \"\",\n    compensation: \"\",\n    address: \"\",\n    city: \"\",\n    zip: \"\",\n    listingBroker: \"\",\n    phone: \"\",\n    email: \"\",\n  });\n\n  const formStyles = {\n    maxWidth: \"800px\",\n    margin: \"0 auto\",\n    padding: \"20px\",\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\", // Two equal columns\n    gap: \"20px\", // Space between columns\n    \"@media (max-width: 768px)\": {\n      // Adjust layout for mobile screens\n      gridTemplateColumns: \"1fr\", // Switch to single column for movile\n      gap: \"10px\",\n    },\n  };\n  const errorStyle = {\n    color: \"red\",\n    fontSize: \"14px\",\n    marginTop: \"5px\",\n  };\n\n  const inputStyles = {\n    width: \"100%\",\n    padding: \"15px\",\n    fontSize: \"18px\",\n    border: \"2px solid #ccc\",\n    borderRadius: \"5px\",\n    boxSizing: \"border-box\",\n  };\n\n  const labelStyles = {\n    marginBottom: \"5px\",\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n    color: \"white\",\n  };\n\n  const buttonStyles = {\n    gridColumn: \"span 2\", // Make the button span both columns\n    padding: \"15px 30px\",\n    fontSize: \"20px\",\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"10px\",\n    cursor: \"pointer\",\n    marginTop: \"20px\",\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setListing((prev) => ({ ...prev, [name]: value }));\n    setErrors((prev) => ({ ...prev, [name]: \"\" }));\n\n    if (name === \"listingBroker\") {\n      const selectedAgent = Object.values(agents).find(\n        (agent) => agent.Name === value,\n      );\n      if (selectedAgent) {\n        setListing((prev) => ({\n          ...prev,\n          phone: selectedAgent.CellNumber,\n          email: selectedAgent.Email,\n        }));\n        setErrors((prev) => ({ ...prev, phone: \"\", email: \"\" }));\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = {};\n\n    if (!validateMlsId(listing.mlsId))\n      newErrors.mlsId = \"Valid MLS ID is required.\";\n    if (!validateCompensation(listing.compensation))\n      newErrors.compensation =\n        \"Compensation must be a number between 0 and 100.\";\n    if (!validateAddress(listing.address))\n      newErrors.address = \"Address is required.\";\n    if (!validateCity(listing.city)) newErrors.city = \"City is required.\";\n    if (!validateZip(listing.zip))\n      newErrors.zip = \"Valid ZIP code is required.\";\n    if (!validateListingBroker(listing.listingBroker))\n      newErrors.listingBroker = \"Listing broker is required.\";\n    if (!validatePhone(listing.phone))\n      newErrors.phone = \"Valid phone number is required.\";\n    if (!validateEmail(listing.email))\n      newErrors.email = \"Valid email is required.\";\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      console.log(\"newErrors are \", newErrors);\n      toast.error(\"Please correct the errors in the form.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${config.SERVER_URL}/api/v1/listings`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(listing),\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.info(\"Listing added successfully\", data);\n      onListingAdded();\n      setListing({\n        mlsId: \"\",\n        compensation: \"\",\n        address: \"\",\n        city: \"\",\n        zip: \"\",\n        listingBroker: \"\",\n        phone: \"\",\n        email: \"\",\n      });\n      setErrors({});\n      toast.success(\"Listing added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding listing:\", error);\n      toast.error(\"Failed to add listing. Please try again.\");\n    }\n  };\n\n  return (\n    <>\n      <Toaster\n        position=\"top-right\"\n        toastOptions={{\n          duration: 5000,\n          style: {\n            background: \"#363636\",\n            color: \"#fff\",\n          },\n        }}\n      />\n      <form onSubmit={handleSubmit} style={formStyles}>\n        <div>\n          <label style={labelStyles}>MLS ID</label>\n          <input\n            style={inputStyles}\n            name=\"mlsId\"\n            value={listing.mlsId}\n            onChange={handleChange}\n            placeholder=\"MLS ID\"\n            required\n            data-testid=\"mls-id-input\"\n          />\n          {errors.mlsId && <p style={errorStyle}>{errors.mlsId}</p>}\n        </div>\n\n        <div>\n          <label style={labelStyles}>Compensation %</label>\n          <input\n            style={inputStyles}\n            name=\"compensation\"\n            value={listing.compensation}\n            onChange={handleChange}\n            placeholder=\"Compensation %\"\n            required\n            data-testid=\"compensation-input\"\n          />\n          {errors.compensation && (\n            <p style={errorStyle}>{errors.compensation}</p>\n          )}\n        </div>\n\n        <div>\n          <label style={labelStyles}>Address</label>\n          <input\n            style={inputStyles}\n            name=\"address\"\n            value={listing.address}\n            onChange={handleChange}\n            placeholder=\"Address\"\n            required\n            data-testid=\"address-input\"\n          />\n          {errors.address && <p style={errorStyle}>{errors.address}</p>}\n        </div>\n\n        <div>\n          <label style={labelStyles}>City/Town</label>\n\n          <input\n            style={inputStyles}\n            name=\"city\"\n            value={listing.city}\n            onChange={handleChange}\n            placeholder=\"City/Town\"\n            required\n            data-testid=\"city-input\"\n          />\n          {errors.city && <p style={errorStyle}>{errors.city}</p>}\n        </div>\n        <div>\n          <label style={labelStyles}>ZIP</label>\n\n          <input\n            style={inputStyles}\n            name=\"zip\"\n            value={listing.zip}\n            onChange={handleChange}\n            placeholder=\"ZIP\"\n            required\n            data-testid=\"zip-input\"\n          />\n          {errors.zip && <p style={errorStyle}>{errors.zip}</p>}\n        </div>\n\n        <div>\n          <label style={labelStyles}>Listing Broker</label>\n          <select\n            style={inputStyles}\n            name=\"listingBroker\"\n            value={listing.listingBroker}\n            onChange={handleChange}\n            required\n            data-testid=\"listing-broker-select\"\n          >\n            <option value=\"\">Select an agent</option>\n            {loading ? (\n              <option disabled>Loading agents...</option>\n            ) : (\n              Object.values(agents).map((agent) => (\n                <option key={agent.MATRIX_UNIQUE_ID} value={agent.Name}>\n                  {agent.Name}\n                </option>\n              ))\n            )}\n          </select>\n          {errors.listingBroker && (\n            <p style={errorStyle}>{errors.listingBroker}</p>\n          )}\n        </div>\n\n        <div>\n          <label style={labelStyles}>Phone</label>\n          <input\n            style={inputStyles}\n            name=\"phone\"\n            value={listing.phone}\n            onChange={handleChange}\n            placeholder=\"Phone\"\n            required\n            data-testid=\"phone-select\"\n          />\n          {errors.phone && <p style={errorStyle}>{errors.phone}</p>}\n        </div>\n\n        <div>\n          <label style={labelStyles}>Email</label>\n          <input\n            style={inputStyles}\n            name=\"email\"\n            value={listing.email}\n            onChange={handleChange}\n            placeholder=\"Email\"\n            required\n            data-testid=\"email-select\"\n          />\n          {errors.email && <p style={errorStyle}>{errors.email}</p>}\n        </div>\n\n        <button\n          type=\"submit\"\n          style={buttonStyles}\n          data-testid=\"add-listing-button\"\n        >\n          Add Listing\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default AddListing;\n","import { useState, useEffect } from \"react\";\nimport {\n  createColumnHelper,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport \"./BuyerBrokerTable.css\";\nimport { capitalizeFirstLetter, isMobile } from \"../lib/utils\";\nimport config from \"../config\";\n\nconst BuyerBrokerTable = ({ refreshKey }) => {\n  const [listings, setListings] = useState([]);\n  const [editRowId, setEditRowId] = useState(null);\n  const [editListing, setEditListing] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // New state to track login status\n  const [isMobileDevice, setIsMobileDevice] = useState(false);\n\n  useEffect(() => {\n    // Check if user is logged in by verifying the token in local storage\n    const token = localStorage.getItem(\"token\");\n    setIsLoggedIn(!!token); // If token exists, user is logged in\n    fetchListings();\n    setIsMobileDevice(isMobile());\n  }, [refreshKey]);\n\n  const columnHelper = createColumnHelper();\n\n  const fetchListings = async () => {\n    try {\n      const response = await fetch(`${config.SERVER_URL}/api/v1/listings`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setListings(data);\n    } catch (error) {\n      console.error(\"Error fetching listings:\", error);\n    }\n  };\n\n  const handleEditClick = (row) => {\n    setEditRowId(row.original._id);\n    setEditListing({ ...row.original });\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditListing((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSaveClick = async (listingId) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        `${config.SERVER_URL}/api/v1/listings/${listingId}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify(editListing),\n        },\n      );\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.info(\"Listing updated successfully\", data);\n      setEditRowId(null);\n      fetchListings(); // Refresh the listings after saving\n    } catch (error) {\n      console.error(\"Error updating listing:\", error);\n    }\n  };\n\n  const handleDeleteClick = async (listingId) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        `${config.SERVER_URL}/api/v1/listings/${listingId}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        },\n      );\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.info(\"Listing deleted successfully\", data);\n      fetchListings(); // Refresh the listings after deletion\n    } catch (error) {\n      console.error(\"Error deleting listing:\", error);\n    }\n  };\n\n  const columns = [\n    columnHelper.accessor(\"mlsId\", {\n      header: \"MLS ID\",\n      cell: (info) =>\n        editRowId === info.row.original._id ? (\n          <input\n            name=\"mlsId\"\n            value={editListing.mlsId || \"\"}\n            onChange={handleInputChange}\n          />\n        ) : (\n          capitalizeFirstLetter(info.getValue())\n        ),\n    }),\n    columnHelper.accessor(\"compensation\", {\n      header: \"Fees\",\n      cell: (info) =>\n        editRowId === info.row.original._id ? (\n          <input\n            name=\"compensation\"\n            value={editListing.fees || \"\"}\n            onChange={handleInputChange}\n          />\n        ) : (\n          `${parseFloat(info.getValue()).toFixed(1)}%`\n        ),\n    }),\n    columnHelper.accessor(\"address\", {\n      header: \"Address\",\n      cell: (info) =>\n        editRowId === info.row.original._id ? (\n          <input\n            name=\"address\"\n            value={editListing.address || \"\"}\n            onChange={handleInputChange}\n          />\n        ) : (\n          capitalizeFirstLetter(info.getValue())\n        ),\n    }),\n    columnHelper.accessor(\"city\", {\n      header: \"City\",\n      cell: (info) =>\n        editRowId === info.row.original._id ? (\n          <input\n            name=\"city\"\n            value={editListing.city || \"\"}\n            onChange={handleInputChange}\n          />\n        ) : (\n          capitalizeFirstLetter(info.getValue())\n        ),\n    }),\n    columnHelper.accessor(\"zip\", {\n      header: \"Zip\",\n      cell: (info) =>\n        editRowId === info.row.original._id ? (\n          <input\n            name=\"zip\"\n            value={editListing.zip || \"\"}\n            onChange={handleInputChange}\n          />\n        ) : (\n          info.getValue()\n        ),\n    }),\n    columnHelper.accessor(\"listingBroker\", {\n      header: \"Agent\",\n      cell: (info) =>\n        editRowId === info.row.original._id ? (\n          <input\n            name=\"listingBroker\"\n            value={editListing.listingBroker || \"\"}\n            onChange={handleInputChange}\n          />\n        ) : (\n          capitalizeFirstLetter(info.getValue())\n        ),\n    }),\n    columnHelper.accessor(\"phone\", {\n      header: \"Phone\",\n      cell: (info) =>\n        editRowId === info.row.original._id ? (\n          <input\n            name=\"phone\"\n            value={editListing.phone || \"\"}\n            onChange={handleInputChange}\n          />\n        ) : (\n          info.getValue()\n        ),\n    }),\n    ...(isMobileDevice\n      ? []\n      : [\n          columnHelper.accessor(\"email\", {\n            header: \"Email\",\n            cell: (info) =>\n              editRowId === info.row.original._id ? (\n                <input\n                  name=\"email\"\n                  value={editListing.email || \"\"}\n                  onChange={handleInputChange}\n                  className=\"email-column\"\n                />\n              ) : (\n                info.getValue()\n              ),\n          }),\n        ]),\n    // Conditionally render the Actions column only if the user is logged in\n    ...(isLoggedIn\n      ? [\n          {\n            header: \"Actions\",\n            cell: (info) =>\n              editRowId === info.row.original._id ? (\n                <>\n                  <button\n                    className=\"button\"\n                    onClick={() => handleSaveClick(info.row.original._id)}\n                  >\n                    Save\n                  </button>\n                  <button\n                    className=\"button cancel\"\n                    onClick={() => setEditRowId(null)}\n                  >\n                    Cancel\n                  </button>\n                </>\n              ) : (\n                <>\n                  <button\n                    className=\"button\"\n                    onClick={() => handleEditClick(info.row)}\n                  >\n                    Edit\n                  </button>\n                  <button\n                    className=\"button delete\"\n                    onClick={() => handleDeleteClick(info.row.original._id)}\n                    data-testid={`delete-button-${info.row.original.mlsId}`}\n                  >\n                    Delete\n                  </button>\n                </>\n              ),\n          },\n        ]\n      : []),\n  ];\n\n  const table = useReactTable({\n    data: listings,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div className=\"table-container\">\n      <table className=\"buyer-broker-table\" data-testid=\"buyer-broker-table\">\n        <thead>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <tr key={headerGroup.id}>\n              {headerGroup.headers.map((header) => (\n                <th key={header.id} className=\"table-header\">\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext(),\n                      )}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {table.getRowModel().rows.map((row) => (\n            <tr key={row.id} data-testid={`table-row-${row.original.mlsId}`}>\n              {row.getVisibleCells().map((cell) => (\n                <td\n                  key={cell.id}\n                  className=\"table-cell\"\n                  data-label={cell.column.columnDef.header} // Add data-label to use as a label on mobile\n                >\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"table-footer-space\"></div>\n    </div>\n  );\n};\n\nexport default BuyerBrokerTable;\n","import { useState, useEffect } from \"react\";\nimport AddListing from \"./AddListing\";\nimport BuyerBrokerTable from \"./BuyerBrokerTable\";\nimport \"./ListingsManager.css\";\n\nconst ListingsManager = ({ isLoggedIn, setIsLoggedIn }) => {\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const handleListingAdded = () => {\n    setRefreshKey((oldKey) => oldKey + 1);\n  };\n\n  useEffect(() => {\n    // Trigger fade-in effect after the component is mounted\n    const timer = setTimeout(() => {\n      setIsLoaded(true);\n    }, 100);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div\n      className={\n        isLoaded ? \"listings-manager-loaded\" : \"listings-manager-loading\"\n      }\n      // style={{ alignSelf: \"center\" }}\n    >\n      <h1 className=\"page-title\">Buyer Broker Commission</h1>\n      {!isLoggedIn ? <></> : <AddListing onListingAdded={handleListingAdded} />}\n      <p className=\"child-text\">\n        View our company’s listings with sellers offering buyer broker\n        compensation in Connecticut & New York\n      </p>\n      <BuyerBrokerTable refreshKey={refreshKey} />\n    </div>\n  );\n};\n\nexport default ListingsManager;\n"],"names":["_ref","onListingAdded","agents","loading","error","agentsError","useAgents","errors","setErrors","useState","listing","setListing","mlsId","compensation","address","city","zip","listingBroker","phone","email","errorStyle","color","fontSize","marginTop","inputStyles","width","padding","border","borderRadius","boxSizing","labelStyles","marginBottom","fontWeight","handleChange","e","name","value","target","prev","selectedAgent","Object","values","find","agent","Name","CellNumber","Email","_jsxs","_Fragment","children","_jsx","Toaster","position","toastOptions","duration","style","background","onSubmit","async","preventDefault","newErrors","validateMlsId","validateCompensation","validateAddress","validateCity","validateZip","validateListingBroker","validatePhone","validateEmail","keys","length","console","log","toast","token","localStorage","getItem","response","fetch","concat","config","SERVER_URL","method","headers","Authorization","body","JSON","stringify","ok","Error","status","data","json","info","success","maxWidth","margin","display","gridTemplateColumns","gap","onChange","placeholder","required","disabled","map","MATRIX_UNIQUE_ID","type","gridColumn","backgroundColor","cursor","refreshKey","listings","setListings","editRowId","setEditRowId","editListing","setEditListing","isLoggedIn","setIsLoggedIn","isMobileDevice","setIsMobileDevice","useEffect","fetchListings","isMobile","columnHelper","createColumnHelper","handleInputChange","columns","accessor","header","cell","row","original","_id","capitalizeFirstLetter","getValue","fees","parseFloat","toFixed","className","onClick","listingId","handleSaveClick","handleEditClick","handleDeleteClick","table","useReactTable","getCoreRowModel","getHeaderGroups","headerGroup","isPlaceholder","flexRender","column","columnDef","getContext","id","getRowModel","rows","getVisibleCells","setRefreshKey","isLoaded","setIsLoaded","timer","setTimeout","clearTimeout","AddListing","handleListingAdded","oldKey","BuyerBrokerTable"],"sourceRoot":""}